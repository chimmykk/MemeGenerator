{"ast":null,"code":"var _jsxFileName = \"/Users/yeiterilsosingkoireng/Desktop/MemeGenerator/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [imageNumber, setImageNumber] = useState(1000);\n  const [mergedImageUrl, setMergedImageUrl] = useState('');\n  const [ethereumAddress, setEthereumAddress] = useState('');\n  const handleMergeImages = async () => {\n    try {\n      const response = await fetch(`https://merging-00hf.onrender.com/merge?imageNumber=${imageNumber}`);\n      const mergedImageBlob = await response.blob();\n      const mergedImageUrl = URL.createObjectURL(mergedImageBlob);\n      setMergedImageUrl(mergedImageUrl);\n    } catch (error) {\n      console.error('Error merging images:', error);\n    }\n  };\n  const handleDownload = () => {\n    const link = document.createElement('a');\n    link.href = mergedImageUrl;\n    link.download = 'merged_image.png'; // You can customize the filename\n    link.click();\n  };\n  const handleEthereumAddressChange = e => {\n    setEthereumAddress(e.target.value);\n  };\n  const handleDropEthereumAddress = () => {\n    // Here you can perform any action you want with the Ethereum address\n    console.log('Dropping Ethereum address:', ethereumAddress);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Meme-Gen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"imageNumber\",\n      children: \"Enter Doge Number:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      id: \"imageNumber\",\n      min: \"1\",\n      step: \"1\",\n      value: imageNumber,\n      onChange: e => setImageNumber(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleMergeImages,\n      children: \"MeME it\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), mergedImageUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: mergedImageUrl,\n        alt: \"Merged Image\",\n        style: {\n          maxWidth: '40%',\n          marginTop: '20px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDownload,\n        children: \"Download Merged Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"ethereumAddress\",\n        children: \"Enter Ethereum Address:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"ethereumAddress\",\n        value: ethereumAddress,\n        onChange: handleEthereumAddressChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDropEthereumAddress,\n        children: \"Drop Ethereum Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ufaFDiAqxbpi1/GMm6unouWZb1A=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","imageNumber","setImageNumber","mergedImageUrl","setMergedImageUrl","ethereumAddress","setEthereumAddress","handleMergeImages","response","fetch","mergedImageBlob","blob","URL","createObjectURL","error","console","handleDownload","link","document","createElement","href","download","click","handleEthereumAddressChange","e","target","value","handleDropEthereumAddress","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","min","step","onChange","onClick","src","alt","style","maxWidth","marginTop","_c","$RefreshReg$"],"sources":["/Users/yeiterilsosingkoireng/Desktop/MemeGenerator/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction App() {\n  const [imageNumber, setImageNumber] = useState(1000);\n  const [mergedImageUrl, setMergedImageUrl] = useState('');\n  const [ethereumAddress, setEthereumAddress] = useState('');\n\n  const handleMergeImages = async () => {\n    try {\n      const response = await fetch(`https://merging-00hf.onrender.com/merge?imageNumber=${imageNumber}`);\n      const mergedImageBlob = await response.blob();\n      const mergedImageUrl = URL.createObjectURL(mergedImageBlob);\n      setMergedImageUrl(mergedImageUrl);\n    } catch (error) {\n      console.error('Error merging images:', error);\n    }\n  };\n\n  const handleDownload = () => {\n    const link = document.createElement('a');\n    link.href = mergedImageUrl;\n    link.download = 'merged_image.png'; // You can customize the filename\n    link.click();\n  };\n\n  const handleEthereumAddressChange = (e) => {\n    setEthereumAddress(e.target.value);\n  };\n\n  const handleDropEthereumAddress = () => {\n    // Here you can perform any action you want with the Ethereum address\n    console.log('Dropping Ethereum address:', ethereumAddress);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Meme-Gen</h1>\n      <label htmlFor=\"imageNumber\">Enter Doge Number:</label>\n      <input\n        type=\"number\"\n        id=\"imageNumber\"\n        min=\"1\"\n        step=\"1\"\n        value={imageNumber}\n        onChange={(e) => setImageNumber(e.target.value)}\n      />\n      <button onClick={handleMergeImages}>MeME it</button>\n      {mergedImageUrl && (\n        <div>\n          <img\n            src={mergedImageUrl}\n            alt=\"Merged Image\"\n            style={{ maxWidth: '40%', marginTop: '20px' }}\n          />\n          <button onClick={handleDownload}>Download Merged Image</button>\n        </div>\n      )}\n      <div>\n        <label htmlFor=\"ethereumAddress\">Enter Ethereum Address:</label>\n        <input\n          type=\"text\"\n          id=\"ethereumAddress\"\n          value={ethereumAddress}\n          onChange={handleEthereumAddressChange}\n        />\n        <button onClick={handleDropEthereumAddress}>Drop Ethereum Address</button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}