{"ast":null,"code":"var _jsxFileName = \"/Users/yeiterilsosingkoireng/Desktop/MemeGenerator/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [imageNumber, setImageNumber] = useState(1000);\n  const [mergedImageUrl, setMergedImageUrl] = useState('');\n  const [furValue, setFurValue] = useState('');\n  const [ethereumAddress, setEthereumAddress] = useState('');\n  const handleMergeImages = async () => {\n    try {\n      const response = await fetch(`http://localhost:3001/merge?imageNumber=${imageNumber}`);\n      const mergedImageBlob = await response.blob();\n      const mergedImageUrl = URL.createObjectURL(mergedImageBlob);\n      setMergedImageUrl(mergedImageUrl);\n\n      // Now trigger the API call\n      try {\n        const apiResponse = await fetch(`http://localhost:3001/api?imageNumber=${imageNumber}`);\n        const furValue = await apiResponse.json();\n        setFurValue(furValue); // Set the fur value in state\n      } catch (apiError) {\n        console.error('Error fetching fur value:', apiError);\n      }\n    } catch (error) {\n      console.error('Error merging images:', error);\n    }\n  };\n  const handleDownload = () => {\n    const link = document.createElement('a');\n    link.href = mergedImageUrl;\n    link.download = 'merged_image.png';\n    link.click();\n  };\n  const handleEthereumAddressChange = e => {\n    setEthereumAddress(e.target.value);\n  };\n  const handleDropEthereumAddress = () => {\n    // Perform Ethereum-related action here\n    console.log('Dropping Ethereum address:', ethereumAddress);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Meme-Gen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"imageNumber\",\n      children: \"Enter Doge Number:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      id: \"imageNumber\",\n      min: \"1\",\n      step: \"1\",\n      value: imageNumber,\n      onChange: e => setImageNumber(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleMergeImages,\n      children: \"Generate Meme\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), mergedImageUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: mergedImageUrl,\n        alt: \"Merged\",\n        style: {\n          maxWidth: '40%',\n          marginTop: '20px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDownload,\n        children: \"Download Merged Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"ethereumAddress\",\n        children: \"Enter Ethereum Address:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"ethereumAddress\",\n        value: ethereumAddress,\n        onChange: handleEthereumAddressChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDropEthereumAddress,\n        children: \"Drop Ethereum Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), furValue && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Fur Value: \", furValue]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Q5vOfg11dOiKoMojZCNXVlkJkKQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","imageNumber","setImageNumber","mergedImageUrl","setMergedImageUrl","furValue","setFurValue","ethereumAddress","setEthereumAddress","handleMergeImages","response","fetch","mergedImageBlob","blob","URL","createObjectURL","apiResponse","json","apiError","console","error","handleDownload","link","document","createElement","href","download","click","handleEthereumAddressChange","e","target","value","handleDropEthereumAddress","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","min","step","onChange","onClick","src","alt","style","maxWidth","marginTop","_c","$RefreshReg$"],"sources":["/Users/yeiterilsosingkoireng/Desktop/MemeGenerator/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction App() {\n  const [imageNumber, setImageNumber] = useState(1000);\n  const [mergedImageUrl, setMergedImageUrl] = useState('');\n  const [furValue, setFurValue] = useState('');\n  const [ethereumAddress, setEthereumAddress] = useState('');\n\n  const handleMergeImages = async () => {\n    try {\n      const response = await fetch(`http://localhost:3001/merge?imageNumber=${imageNumber}`);\n      const mergedImageBlob = await response.blob();\n      const mergedImageUrl = URL.createObjectURL(mergedImageBlob);\n      setMergedImageUrl(mergedImageUrl);\n\n      // Now trigger the API call\n      try {\n        const apiResponse = await fetch(`http://localhost:3001/api?imageNumber=${imageNumber}`);\n        const furValue = await apiResponse.json();\n        setFurValue(furValue); // Set the fur value in state\n      } catch (apiError) {\n        console.error('Error fetching fur value:', apiError);\n      }\n    } catch (error) {\n      console.error('Error merging images:', error);\n    }\n  };\n\n  const handleDownload = () => {\n    const link = document.createElement('a');\n    link.href = mergedImageUrl;\n    link.download = 'merged_image.png';\n    link.click();\n  };\n\n  const handleEthereumAddressChange = (e) => {\n    setEthereumAddress(e.target.value);\n  };\n\n  const handleDropEthereumAddress = () => {\n    // Perform Ethereum-related action here\n    console.log('Dropping Ethereum address:', ethereumAddress);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Meme-Gen</h1>\n      <label htmlFor=\"imageNumber\">Enter Doge Number:</label>\n      <input\n        type=\"number\"\n        id=\"imageNumber\"\n        min=\"1\"\n        step=\"1\"\n        value={imageNumber}\n        onChange={(e) => setImageNumber(e.target.value)}\n      />\n      <button onClick={handleMergeImages}>Generate Meme</button>\n      {mergedImageUrl && (\n        <div>\n          <img\n            src={mergedImageUrl}\n            alt=\"Merged\"\n            style={{ maxWidth: '40%', marginTop: '20px' }}\n          />\n          <button onClick={handleDownload}>Download Merged Image</button>\n        </div>\n      )}\n      <div>\n        <label htmlFor=\"ethereumAddress\">Enter Ethereum Address:</label>\n        <input\n          type=\"text\"\n          id=\"ethereumAddress\"\n          value={ethereumAddress}\n          onChange={handleEthereumAddressChange}\n        />\n        <button onClick={handleDropEthereumAddress}>Drop Ethereum Address</button>\n      </div>\n      {furValue && (\n        <div>\n          <p>Fur Value: {furValue}</p>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}