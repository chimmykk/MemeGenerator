{"ast":null,"code":"const express = require('express');\nconst Jimp = require('jimp');\nconst axios = require('axios');\nconst app = express();\nconst port = 3001;\nconst cors = require('cors');\napp.use(cors());\napp.use(express.json());\n\n// Merge endpoint\napp.get('/merge', async (req, res) => {\n  const imageNumber = req.query.imageNumber;\n  try {\n    // Merging image code here...\n    // ...\n\n    res.writeHead(200, {\n      'Content-Type': 'image/png',\n      'Content-Length': mergedImageBuffer.length,\n      'Cache-Control': 'public, max-age=31536000'\n    });\n    res.end(mergedImageBuffer);\n  } catch (error) {\n    console.error('Error merging images:', error);\n    res.status(500).json({\n      error: 'Internal server error'\n    });\n  }\n});\n\n// API endpoint\napp.get('/api', async (req, res) => {\n  const imageNumber = req.query.imageNumber;\n\n  // Construct apiUrl using imageNumber...\n  // ...\n\n  try {\n    const response = await axios.get(apiUrl);\n    const furTrait = response.data.traits.find(trait => trait.trait_type.toLowerCase() === 'fur');\n    if (furTrait) {\n      res.json(furTrait.value);\n      console.log('Fur Value:', furTrait.value);\n    } else {\n      res.status(404).json({\n        error: 'Fur trait not found'\n      });\n      console.log('Fur trait not found');\n    }\n  } catch (error) {\n    console.error('Error while fetching NFT trait metadata:', error.message);\n    res.status(500).json({\n      error: 'Internal server error'\n    });\n  }\n});\napp.listen(port, () => {\n  console.log(`Server is running on port ${port}`);\n});","map":{"version":3,"names":["express","require","Jimp","axios","app","port","cors","use","json","get","req","res","imageNumber","query","writeHead","mergedImageBuffer","length","end","error","console","status","response","apiUrl","furTrait","data","traits","find","trait","trait_type","toLowerCase","value","log","message","listen"],"sources":["/Users/yeiterilsosingkoireng/Desktop/MemeGenerator/src/App.js"],"sourcesContent":["const express = require('express');\nconst Jimp = require('jimp');\nconst axios = require('axios');\n\nconst app = express();\nconst port = 3001;\nconst cors = require('cors');\n\napp.use(cors());\napp.use(express.json());\n\n// Merge endpoint\napp.get('/merge', async (req, res) => {\n  const imageNumber = req.query.imageNumber;\n\n  try {\n    // Merging image code here...\n    // ...\n\n    res.writeHead(200, {\n      'Content-Type': 'image/png',\n      'Content-Length': mergedImageBuffer.length,\n      'Cache-Control': 'public, max-age=31536000',\n    });\n\n    res.end(mergedImageBuffer);\n  } catch (error) {\n    console.error('Error merging images:', error);\n    res.status(500).json({ error: 'Internal server error' });\n  }\n});\n\n// API endpoint\napp.get('/api', async (req, res) => {\n  const imageNumber = req.query.imageNumber;\n\n  // Construct apiUrl using imageNumber...\n  // ...\n\n  try {\n    const response = await axios.get(apiUrl);\n\n    const furTrait = response.data.traits.find(\n      (trait) => trait.trait_type.toLowerCase() === 'fur'\n    );\n\n    if (furTrait) {\n      res.json(furTrait.value);\n      console.log('Fur Value:', furTrait.value);\n    } else {\n      res.status(404).json({ error: 'Fur trait not found' });\n      console.log('Fur trait not found');\n    }\n  } catch (error) {\n    console.error('Error while fetching NFT trait metadata:', error.message);\n    res.status(500).json({ error: 'Internal server error' });\n  }\n});\n\napp.listen(port, () => {\n  console.log(`Server is running on port ${port}`);\n});\n"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAM,CAAC;AAC5B,MAAME,KAAK,GAAGF,OAAO,CAAC,OAAO,CAAC;AAE9B,MAAMG,GAAG,GAAGJ,OAAO,CAAC,CAAC;AACrB,MAAMK,IAAI,GAAG,IAAI;AACjB,MAAMC,IAAI,GAAGL,OAAO,CAAC,MAAM,CAAC;AAE5BG,GAAG,CAACG,GAAG,CAACD,IAAI,CAAC,CAAC,CAAC;AACfF,GAAG,CAACG,GAAG,CAACP,OAAO,CAACQ,IAAI,CAAC,CAAC,CAAC;;AAEvB;AACAJ,GAAG,CAACK,GAAG,CAAC,QAAQ,EAAE,OAAOC,GAAG,EAAEC,GAAG,KAAK;EACpC,MAAMC,WAAW,GAAGF,GAAG,CAACG,KAAK,CAACD,WAAW;EAEzC,IAAI;IACF;IACA;;IAEAD,GAAG,CAACG,SAAS,CAAC,GAAG,EAAE;MACjB,cAAc,EAAE,WAAW;MAC3B,gBAAgB,EAAEC,iBAAiB,CAACC,MAAM;MAC1C,eAAe,EAAE;IACnB,CAAC,CAAC;IAEFL,GAAG,CAACM,GAAG,CAACF,iBAAiB,CAAC;EAC5B,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7CP,GAAG,CAACS,MAAM,CAAC,GAAG,CAAC,CAACZ,IAAI,CAAC;MAAEU,KAAK,EAAE;IAAwB,CAAC,CAAC;EAC1D;AACF,CAAC,CAAC;;AAEF;AACAd,GAAG,CAACK,GAAG,CAAC,MAAM,EAAE,OAAOC,GAAG,EAAEC,GAAG,KAAK;EAClC,MAAMC,WAAW,GAAGF,GAAG,CAACG,KAAK,CAACD,WAAW;;EAEzC;EACA;;EAEA,IAAI;IACF,MAAMS,QAAQ,GAAG,MAAMlB,KAAK,CAACM,GAAG,CAACa,MAAM,CAAC;IAExC,MAAMC,QAAQ,GAAGF,QAAQ,CAACG,IAAI,CAACC,MAAM,CAACC,IAAI,CACvCC,KAAK,IAAKA,KAAK,CAACC,UAAU,CAACC,WAAW,CAAC,CAAC,KAAK,KAChD,CAAC;IAED,IAAIN,QAAQ,EAAE;MACZZ,GAAG,CAACH,IAAI,CAACe,QAAQ,CAACO,KAAK,CAAC;MACxBX,OAAO,CAACY,GAAG,CAAC,YAAY,EAAER,QAAQ,CAACO,KAAK,CAAC;IAC3C,CAAC,MAAM;MACLnB,GAAG,CAACS,MAAM,CAAC,GAAG,CAAC,CAACZ,IAAI,CAAC;QAAEU,KAAK,EAAE;MAAsB,CAAC,CAAC;MACtDC,OAAO,CAACY,GAAG,CAAC,qBAAqB,CAAC;IACpC;EACF,CAAC,CAAC,OAAOb,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,0CAA0C,EAAEA,KAAK,CAACc,OAAO,CAAC;IACxErB,GAAG,CAACS,MAAM,CAAC,GAAG,CAAC,CAACZ,IAAI,CAAC;MAAEU,KAAK,EAAE;IAAwB,CAAC,CAAC;EAC1D;AACF,CAAC,CAAC;AAEFd,GAAG,CAAC6B,MAAM,CAAC5B,IAAI,EAAE,MAAM;EACrBc,OAAO,CAACY,GAAG,CAAE,6BAA4B1B,IAAK,EAAC,CAAC;AAClD,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}