[{"/Users/yeiterilsosingkoireng/Desktop/MemeGenerator/src/index.js":"1","/Users/yeiterilsosingkoireng/Desktop/MemeGenerator/src/reportWebVitals.js":"2","/Users/yeiterilsosingkoireng/Desktop/MemeGenerator/src/App.js":"3"},{"size":535,"mtime":1693307926439,"results":"4","hashOfConfig":"5"},{"size":362,"mtime":1693307926439,"results":"6","hashOfConfig":"5"},{"size":2163,"mtime":1693329346283,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","suppressedMessages":"10","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1e6arbm",{"filePath":"11","messages":"12","suppressedMessages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},"/Users/yeiterilsosingkoireng/Desktop/MemeGenerator/src/index.js",[],[],"/Users/yeiterilsosingkoireng/Desktop/MemeGenerator/src/reportWebVitals.js",[],[],"/Users/yeiterilsosingkoireng/Desktop/MemeGenerator/src/App.js",["18"],[],"import React, { useState } from 'react';\n\nfunction App() {\n  const [imageNumber, setImageNumber] = useState(1000);\n  const [mergedImageUrl, setMergedImageUrl] = useState('');\n  const [ethereumAddress, setEthereumAddress] = useState('');\n\n  const handleMergeImages = async () => {\n    try {\n      const response = await fetch(`http://localhost:3001/merge?imageNumber=${imageNumber}`);\n      const mergedImageBlob = await response.blob();\n      const mergedImageUrl = URL.createObjectURL(mergedImageBlob);\n      setMergedImageUrl(mergedImageUrl);\n    } catch (error) {\n      console.error('Error merging images:', error);\n    }\n  };\n\n  const handleDownload = () => {\n    const link = document.createElement('a');\n    link.href = mergedImageUrl;\n    link.download = 'merged_image.png'; // You can customize the filename\n    link.click();\n  };\n\n  const handleEthereumAddressChange = (e) => {\n    setEthereumAddress(e.target.value);\n  };\n\n  const handleDropEthereumAddress = () => {\n    // Here you can perform any action you want with the Ethereum address\n    console.log('Dropping Ethereum address:', ethereumAddress);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Meme-Gen</h1>\n      <label htmlFor=\"imageNumber\">Enter Doge Number:</label>\n      <input\n        type=\"number\"\n        id=\"imageNumber\"\n        min=\"1\"\n        step=\"1\"\n        value={imageNumber}\n        onChange={(e) => setImageNumber(e.target.value)}\n      />\n      <button onClick={handleMergeImages}>MeME it</button>\n      {mergedImageUrl && (\n        <div>\n          <img\n            src={mergedImageUrl}\n            alt=\"Merged Image\"\n            style={{ maxWidth: '40%', marginTop: '20px' }}\n          />\n          <button onClick={handleDownload}>Download Merged Image</button>\n        </div>\n      )}\n      <div>\n        <label htmlFor=\"ethereumAddress\">Enter Ethereum Address:</label>\n        <input\n          type=\"text\"\n          id=\"ethereumAddress\"\n          value={ethereumAddress}\n          onChange={handleEthereumAddressChange}\n        />\n        <button onClick={handleDropEthereumAddress}>Drop Ethereum Address</button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n",{"ruleId":"19","severity":1,"message":"20","line":50,"column":11,"nodeType":"21","endLine":54,"endColumn":13},"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement"]